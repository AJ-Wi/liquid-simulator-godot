(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{373:function(t,s,a){t.exports=a.p+"assets/img/activate_plugin.1bbe11d8.png"},374:function(t,s,a){t.exports=a.p+"assets/img/add_plugin_to_tilemap.6dc3dd05.png"},375:function(t,s,a){t.exports=a.p+"assets/img/added_liquidsim_node.44d17cc3.png"},376:function(t,s,a){t.exports=a.p+"assets/img/adjust_cell_size.cabdf114.png"},455:function(t,s,a){"use strict";a.r(s);var e=a(65),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("iframe",{attrs:{width:"100%",height:"400",src:"https://www.youtube.com/embed/nF7cdUVgvNc",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),t._v(" "),e("h1",{attrs:{id:"guide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#guide"}},[t._v("#")]),t._v(" Guide")]),t._v(" "),e("p",[t._v("This guide will teach you how to compile and add the plugin to a new "),e("strong",[t._v("Godot engine")]),t._v(" project .")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("Try a demo of the plugin "),e("RouterLink",{attrs:{to:"/game/"}},[t._v("here")])],1)]),t._v(" "),e("h2",{attrs:{id:"prerequisites"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites.")]),t._v(" "),e("p",[t._v("For the development of this guide, we must have the following installed in our system:")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("ul",[e("li",[t._v("Godot engine 3.x")]),t._v(" "),e("li",[t._v("Compilador C++")]),t._v(" "),e("li",[t._v("Scones build tool")]),t._v(" "),e("li",[t._v("Emscripten 2.0.17 build tool (In case of building for web "),e("strong",[t._v('"wasm"')]),t._v(").")])])]),t._v(" "),e("h2",{attrs:{id:"preliminary-settings"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#preliminary-settings"}},[t._v("#")]),t._v(" Preliminary settings.")]),t._v(" "),e("p",[t._v("Before continuing with the process, it is important to note that for convenience, we can create an alias\nfor the command "),e("strong",[t._v('"emcc"')]),t._v(" and "),e("strong",[t._v('"em++"')]),t._v(" provided by "),e("strong",[t._v('"emscripten"')]),t._v(", we do it as follows.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alias emcc=\"path/to/your/emscripten/emcc\"'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'alias em++=\"path/to/your/emscripten/em++\"'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc\n")])])]),e("p",[t._v("For more information on how to download and install emscripten, visit their "),e("a",{attrs:{href:"https://emscripten.org/docs/getting_started/downloads.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("official page"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("If you do not choose to make this setting, and wish to compile a web version of the plugin, follow the instructions in "),e("a",{attrs:{href:"#problemas-al-compilar"}},[t._v("Problems compiling.")])]),t._v(" "),e("h2",{attrs:{id:"clone-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-repository"}},[t._v("#")]),t._v(" Clone Repository.")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("It is likely that you will find differences between the original repository and this repository, if you are going to use the original "),e("strong",[t._v('"tterrasson"')]),t._v(" repository , I recommend that you follow the instructions you will find there, since there may be differences in how the plugin is installed.")])]),t._v(" "),e("p",[t._v("Original Repository.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recurse-submodules https://github.com/tterrasson/liquid-simulator-godot\n")])])]),e("p",[t._v("This repository.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --recurse-submodules https://github.com/AJ-Wi/liquid-simulator-godot\n")])])]),e("h2",{attrs:{id:"compile-binary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compile-binary"}},[t._v("#")]),t._v(" Compile binary.")]),t._v(" "),e("p",[t._v("In this section we will see how to compile both the godot-cpp binary and our plugin.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("In the following commands we must replace "),e("strong",[t._v('"<os>"')]),t._v(" with the platform on which we want to run our game:")]),t._v(" "),e("ul",[e("li",[t._v("windows")]),t._v(" "),e("li",[t._v("linux")]),t._v(" "),e("li",[t._v("osx")]),t._v(" "),e("li",[t._v("javascript")]),t._v(" "),e("li",[t._v("andorid")])])]),t._v(" "),e("h3",{attrs:{id:"godot-cpp-binary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#godot-cpp-binary"}},[t._v("#")]),t._v(" godot-cpp binary.")]),t._v(" "),e("p",[t._v("We need to compile the godot-cpp binary according to the platform on which we want to run our game, for this we must be positioned inside the godot-cpp folder in our terminal.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" liquid-simulator-godot/godot-cpp\n$ scons "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("os"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("generate_bindings")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yes\n")])])]),e("h3",{attrs:{id:"plugin-binary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin-binary"}},[t._v("#")]),t._v(" plugin binary.")]),t._v(" "),e("p",[t._v("Once the godot-cpp binary is compiled, we return to the root folder of the project and compile the plugin.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n$ scons "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("os"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("h2",{attrs:{id:"copy-the-plugin-to-your-project"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#copy-the-plugin-to-your-project"}},[t._v("#")]),t._v(" Copy the plugin to your project.")]),t._v(" "),e("p",[t._v("At this point you will find the compiled plugin in the "),e("strong",[t._v('"bin"')]),t._v(" folder of the project, you just need to copy this folder to the "),e("strong",[t._v('"addons"')]),t._v(" folder of your project, and rename the plugin folder as "),e("strong",[t._v('"liquidsim"')]),t._v(" , you can also execute the following command.")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -r bin/* /ruta/a/tuproyecto/addons/liquidsim\n")])])]),e("p",[t._v("You should be left with the following file structure in your project.")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(".\ntuproyecto\n    ├── addons\n    |    └── liquidsim\n    |        ├── assets\n    |        |   ├── icon.png\n    |        |   ├── lava.png\n    |        |   └── water.png\n    |        ├── lib\n    |        |   └── `libliquidsim.so` (according to the one you have compiled.)\n    |        ├── LiquidSim.tscn\n    |        ├── liquidsim_plugin.gd\n    |        ├── liquidsim.gdnlib\n    |        ├── liquuidsim.gdns\n    |        └── plugin.cfg\n    ├── default_env.tres\n    ├── icon.png\n    ├── project.godot\n")])])]),e("h2",{attrs:{id:"activate-the-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activate-the-plugin"}},[t._v("#")]),t._v(" Activate the plugin.")]),t._v(" "),e("p",[t._v("To do this, you access the configuration of your project and "),e("strong",[t._v('"LiquidSim"')]),t._v(" will appear in the plugin section, you just have to activate it.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(373),alt:"alt img"}})]),t._v(" "),e("h2",{attrs:{id:"add-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#add-node"}},[t._v("#")]),t._v(" Add Node.")]),t._v(" "),e("p",[t._v("Once activated, the plugin already appears in the list of nodes in the editor.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(374),alt:"alt img"}})]),t._v(" "),e("p",[t._v("For our new node or plugin to work, we must add it as a child node of a "),e("strong",[t._v('"TileMap"')]),t._v(".")]),t._v(" "),e("p",[e("img",{attrs:{src:a(375),alt:"alt img"}})]),t._v(" "),e("h2",{attrs:{id:"plugin-setting"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin-setting"}},[t._v("#")]),t._v(" Plugin setting.")]),t._v(" "),e("p",[t._v("Adjust the size of the plugin cells according to the cell size of your "),e("strong",[t._v('"TileMap"')]),t._v(".")]),t._v(" "),e("p",[e("img",{attrs:{src:a(376),alt:"alt img"}})]),t._v(" "),e("h2",{attrs:{id:"try-the-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#try-the-plugin"}},[t._v("#")]),t._v(" Try the plugin.")]),t._v(" "),e("p",[t._v("Attach a gdscript to the "),e("strong",[t._v('"TileMap"')]),t._v(" to test the plugin, you can use the following sample code.")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("extends TileMap\n\nfunc _ready"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace with function body.")]),t._v("\n\nfunc _input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" event "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" InputEventMouseButton"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mouse in viewport coordinates")]),t._v("\n\t\tvar wpos "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" world_to_map"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("get_global_mouse_position"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_liquid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wpos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wpos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API.")]),t._v(" "),e("div",{staticClass:"language-py extra-class"},[e("pre",{pre:!0,attrs:{class:"language-py"}},[e("code",[t._v("$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Starts the simulation "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Started by default"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Stops the simulation\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update_simulation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Force simulation update\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cleanup_empty_cells"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Clean "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),t._v(" empty cells "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("automatic"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_liquid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v(" amount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Adds some liquid to the cell"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("del_liquid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" empty a cell\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_liquid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v(" amount"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Set a fixed amount of liquid to the cell\n$LiquidSim"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_liquid"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" x"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" y"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Returns the amount of liquid the cell has"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),e("h2",{attrs:{id:"compiling-problems"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compiling-problems"}},[t._v("#")]),t._v(" Compiling problems.")]),t._v(" "),e("p",[t._v("As mentioned at the beginning, if you are working with the "),e("a",{attrs:{href:"https://github.com/tterrasson/liquid-simulator-godot",target:"_blank",rel:"noopener noreferrer"}},[t._v('"original"'),e("OutboundLink")],1),t._v(" version of the plugin, follow the instructions in that repository.")]),t._v(" "),e("p",[t._v("In case you continue working with the version of this repository, I will leave you with a tip or solution to a problem that I encountered along the way and my experience will probably help you.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("At the time of compiling the plugin for the web version, I found that the script "),e("strong",[t._v('"SConstruct"')]),t._v(" did not contain the necessary code fragment for this task, I got in the repositories of "),e("strong",[t._v('"godot-cpp"')]),t._v(" a bash script to compile to the html5 version, however, that compilation gave me a lot of trouble, and even with little information to fix it, the "),e("strong",[t._v('"godot"')]),t._v(" documentation's recommendation, as to the version of "),e("strong",[t._v('"Emscripten"')]),t._v(" is 1.39.9, after many attempts and research I was able to conclude that for the compilation of this plugin the version of "),e("strong",[t._v('"Emscripten"')]),t._v(" that we should use is 2.0.17, and for greater comfort Add the missing code snippet for this operation to the "),e("strong",[t._v('"SConstruct"')]),t._v(" file, so that we can directly run the "),e("strong",[t._v('"scons"')]),t._v(" command.")])]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("In case you don't have an alias for the "),e("strong",[t._v('"emcc"')]),t._v(" and "),e("strong",[t._v('"em++"')]),t._v(" commands, you must add the "),e("strong",[t._v('"emscripten"')]),t._v(" attribute to provide the path of our build tool, here it is An example:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("$ scons "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("platform")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("javascript "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("emscripten")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/bin/emscriptem/\n")])])])]),t._v(" "),e("p",[t._v("For more details, see "),e("a",{attrs:{href:"https://docs.godotengine.org/en/3.2/tutorials/plugins/gdnative/gdnative-cpp-example.html#using-the-gdnative-module",target:"_blank",rel:"noopener noreferrer"}},[t._v('"Using GDNative Module"'),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);